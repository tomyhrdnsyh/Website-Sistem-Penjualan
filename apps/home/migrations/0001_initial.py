# Generated by Django 3.2.16 on 2022-11-15 17:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Pengguna',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nama_distributor', models.CharField(max_length=100)),
                ('no_telepon', models.CharField(max_length=20)),
                ('alamat_distributor', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'distributor',
            },
        ),
        migrations.CreateModel(
            name='JenisProduk',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nama_jenis_produk', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'jenis_produk',
            },
        ),
        migrations.CreateModel(
            name='Konsumen',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nama_konsumen', models.CharField(max_length=100)),
                ('alamat_konsumen', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'konsumen',
            },
        ),
        migrations.CreateModel(
            name='Produk',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nama_produk', models.CharField(max_length=100)),
                ('jenis_produk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.jenisproduk')),
            ],
            options={
                'db_table': 'produk',
            },
        ),
        migrations.CreateModel(
            name='Petugas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nama_petugas', models.CharField(max_length=100)),
                ('distributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.distributor')),
            ],
            options={
                'db_table': 'petugas',
            },
        ),
        migrations.CreateModel(
            name='FakturPenjualan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tanggal_jual', models.DateField()),
                ('konsumen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.konsumen')),
            ],
            options={
                'db_table': 'faktur_penjualan',
            },
        ),
        migrations.CreateModel(
            name='FakturPembelian',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tanggal_pembelian', models.DateField()),
                ('tunai', models.FloatField()),
                ('pengguna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'faktur_pembelian',
            },
        ),
        migrations.CreateModel(
            name='DetailProduk',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stok', models.IntegerField()),
                ('tanggal_kadaluarsa', models.DateField()),
                ('harga_jual_satuan', models.FloatField()),
                ('faktur_pembelian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.fakturpembelian')),
                ('produk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.produk')),
            ],
            options={
                'db_table': 'detail_produk',
            },
        ),
        migrations.CreateModel(
            name='DetailFakturPenjualan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('kuantitas', models.IntegerField()),
                ('faktur_penjualan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.fakturpenjualan')),
                ('produk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.produk')),
            ],
            options={
                'db_table': 'detail_faktur_penjualan',
            },
        ),
        migrations.CreateModel(
            name='DetailFakturPembelian',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('kuantitas', models.IntegerField()),
                ('harga_satuan', models.FloatField()),
                ('faktur_pembelian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.fakturpembelian')),
                ('produk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.produk')),
            ],
            options={
                'db_table': 'detail_faktur_pembelian',
            },
        ),
    ]
